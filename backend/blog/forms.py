import datetime
from django import forms
from django.template.defaultfilters import slugify

from blog.models import BlogPost


class BlogPostAdminForm(forms.ModelForm):
    class Meta:
        model = BlogPost
        fields = ['author', 'title', 'subtitle', 'slug', 'content', 'tags', 'published',
                  'featured']

    def slug_generator(self):
        title = self.cleaned_data["title"]
        date = datetime.datetime.today()
        return '%s-%i-%i-%i' % (slugify(title), date.day, date.month, date.year)

    def clean(self):
        slug = self.cleaned_data["slug"]

        if self.instance._state.adding is True:
            if slug is None:
                slug = self.slug_generator()
                if BlogPost.objects.filter(slug=slug).exists():
                    raise forms.ValidationError(
                        {'slug': 'Autogenerated slug already exists. Enter unique '
                                 'slug'})

            if BlogPost.objects.filter(slug=slug).exists():
                raise forms.ValidationError(
                    {"slug": "Slug already exists. Enter unique slug or leave empty"})
        else:
            if slug is None:
                slug = self.slug_generator()

            if BlogPost.objects.filter(slug=slug).exists() and slug != self.instance.slug:
                raise forms.ValidationError(
                    {"slug": "Slug already exists. Enter unique slug"})
